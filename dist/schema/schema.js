"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var userSchema = "\n    type User {\n        _id: ID!\n        name: String!\n        email: String!\n        password: String!\n        token: String\n    }\n\n    type UserToken {\n        name: String\n        email: String\n        token: String\n    }\n\n    type UserTokenResponse {\n        data: UserToken\n        error: String\n        ok: Boolean\n    }\n\n    type Users {\n        users: [User]\n    }\n    type UserResponse {\n        data: User\n        error: String\n        ok: Boolean\n    }\n";
var infoSchema = "\n    type Info {\n        _id: ID!\n        country: String, \n        currentBudget: String,\n        expense: [String],\n        missing: String,\n        travelDate: String\n    }\n\n    type InfoResponse {\n        data: Info\n        error: String\n        ok: Boolean\n    }\n";
var commons = "\n    type Query {\n        info(id: ID!): Info\n        users(limit: Int): [User]\n        user(id: ID!): User\n    }\n    type Mutation {\n        signUp(name: String!, email: String!, password: String!, created_at: Int, updated_at: Int ): UserResponse\n        userLogin(email: String!, password: String!): UserTokenResponse\n        updateUser(id: ID!, name: String, email: String, password: String,  updated_at: Int): UserResponse\n        deleteUser(id: ID!): UserResponse\n        saveInfo(user: String, country: String, currentBudget: String, expense: [String], missing: String, travelDate: String): InfoResponse\n        updateInfo(id: ID!, country: String, currentBudget: String, expense: [String], missing: String, travelDate: String): InfoResponse\n        deleteInfo(id: ID!): InfoResponse\n    }\n";
var schema = graphql_1.buildSchema(" " + commons + " " + userSchema + " " + infoSchema);
exports.default = schema;
